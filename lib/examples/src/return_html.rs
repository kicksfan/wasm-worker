use worker::{FetchHandler, WorkerRequest, WorkerResult};

#[derive(Default)]
pub struct Handler {}

impl FetchHandler for Handler {
  fn handle(&self, _req: WorkerRequest) -> WorkerResult {
    // Ok(r#"<!DOCTYPE html>
    //   <body>
    //     <h1>Hello World</h1>
    //     <p>This markup was generated by a Cloudflare Worker.</p>
    //   </body>"#.to_owned().into())
      Ok(r#"<!DOCTYPE html>
      <body>
        <h1>Hello World</h1>
        <p>This markup was generated by a Cloudflare Worker.</p>
      </body>"#.into())
  }
}

// pub fn handler(_req: WorkerRequest) -> Result {
//   r#"<!DOCTYPE html>
//   <body>
//     <h1>Hello World</h1>
//     <p>This markup was generated by a Cloudflare Worker.</p>
//   </body>"#
//   // let headers = worker::make_headers(vec![("content-type", "text/html;charset=UTF-8")])?;
//   // let headers = vec![("content-type", "text/html;charset=UTF-8")].try_from()?;
//   // worker::make_response(&body, 200, vec![("content-type", "text/html;charset=UTF-8")])
// }